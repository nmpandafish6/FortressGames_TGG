import random
import math


f = open(rawFile, "rb")
bytes = []
try:
   byte = f.read(1)
   while byte:
      bytes.append(ord(byte))
      # Do stuff with byte.
      byte = f.read(1)
finally:
   f.close()
   
mlength = int(math.sqrt(len(bytes)))
me = bpy.data.meshes.new("Mesh")
ob = bpy.data.objects.new("OBJ", me)



verts = []
i = 0
y = 0
for row in range(0,mlength*2-1):
 for col in range(0,mlength if row % 2 == 0 else mlength-1):
  z = 0
  if row % 2 == 0:
   z = bytes[i]/1
   i = i + 1
  else:
   z = (bytes[col+math.ceil(row/2)*(mlength)]+bytes[col+math.ceil(row/2)*(mlength)+1]+bytes[col]+bytes[col+1])/4
  verts.append((col if row % 2 == 0 else 0.5 + col, row * 0.5, z))
    

faces = []
for row in range(0,mlength-1):
   for col in range(0,mlength-1):
      upperLeft = (row * ((mlength-1) * 2 + 1) + col)
      upperRight = (row * ((mlength-1) * 2 + 1) + col + 1)
      bottomLeft = ((row + 1) * ((mlength-1) * 2 + 1) + col)
      bottomRight = ((row + 1) * ((mlength-1) * 2 + 1) + col + 1) 
      center = ((row+1) * ((mlength-1) + 1) + col)
      faces.append((upperLeft,upperRight,center))
      faces.append((upperLeft,bottomLeft,center))
      faces.append((bottomLeft,bottomRight,center))
      faces.append((upperRight,bottomRight,center))

me.from_pydata(verts,[],faces)

scn = bpy.context.scene
scn.objects.link(ob)
scn.objects.active = ob
ob.select = True
